//------------------------------------------------
//--- 010 Editor v13.0.1 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

typedef struct{
    BigEndian();
    uint ModelIndex;
    uint Flags;
    short FrameCount;
    short local_68;
    
    uint ThirtyTwo;
    local uint unk = Flags & 0x1e00000 |
             Flags & 0x1e0000 |
             Flags & 0x1e000 |
             Flags & 0x1e00 |
             Flags & 0x1e0 |
             unk & 0xf8000000 |
             Flags & 1 |
             Flags & 6 |
             Flags & 0x18 |
             Flags & 0x6000000;
    
    local uint Pos = Flags >> 1 & 3;
    local uint Rot = Flags >> 3 & 3;
    local uint Scale = Flags >> 5 & 3;
    local uint Opacity = Flags >> 7 & 3;
    local uint UV1 = Flags >> 9 & 3;
    local uint WH1 = Flags >> 0xb & 3;
    local uint UV2 = Flags >> 0xd & 3;
    local uint WH2 = Flags >> 0xf & 3;
    local uint BlendRate = Flags >> 0x11 & 3;
    local uint BlendRate2 = Flags >> 0x13 & 3;
    local uint GlareRate = Flags >> 0x15 & 3;
    local uint AlphaRef = Flags >> 0x17 & 3;
    local uint OutlineID = Flags >> 0x19 & 3;

    
    if (Pos != 0)
        {
            struct{
                float Pos[3];
                }PosFrames[FrameCount];
            }
    
    
    if (Rot != 0)
        {
            struct{
                float Rot[3];
                }RotFrames[FrameCount];
            }
    
    if (Scale != 0)
        {
            struct{
                float Scale[3];
                }ScaleFrames[FrameCount];
            }
    
    if (Opacity != 0)
        {
            struct{
                float Opacity;
                }OpacityFrames[FrameCount];
            }
    
    if (UV1 != 0)
        {
            struct{
                float UV1[2];
                }UV1Frames[FrameCount];
            }
    
    if (WH1 != 0)
        {
            struct{
                float WH1[2];
                }WH1Frames[FrameCount];
            }
    
    if (UV2 != 0)
        {
            struct{
                float UV2[2];
                }UV2Frames[FrameCount];
            }
    
    if (WH2 != 0)
        {
            struct{
                float WH2[2];
                }WH2Frames[FrameCount];
            }
            
    if (BlendRate != 0)
        {
            struct{
                float BlendRate1;
                }BlendRate1Frames[FrameCount];
            }
    
    if (BlendRate2 != 0)
        {
            struct{
                float BlendRate2;
                }BlendRate2Frames[FrameCount];
            }
    
    
    if (GlareRate != 0)
        {
            struct{
                float GlareRate;
                }GlareRateFrames[FrameCount];
            }
    
    if (AlphaRef != 0)
        {
            struct{
                float AlphaRef;
                }AlphaRefFrames[FrameCount];
            }
    
    if (OutlineID != 0)
        {
            struct{
                float OutlineID;
                }OutlineIDFrames[FrameCount];
            }

}TNuccChunkBillboard <optimize = false>;