//------------------------------------------------
//--- 010 Editor v13.0.1 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------
BigEndian();
uint ModelIndex;
uint Flags;
//LittleEndian();
uint local_68;
//BigEndian();
uint ThirtyTwo;
local uint unk = Flags & 0x1e00000 |
         Flags & 0x1e0000 |
         Flags & 0x1e000 |
         Flags & 0x1e00 |
         Flags & 0x1e0 |
         unk & 0xf8000000 |
         Flags & 1 |
         Flags & 6 |
         Flags & 0x18 |
         Flags & 0x6000000;


Printf("%d\n\n", unk);
Printf("%d\n", Flags & 0x1e00000);
Printf("%d\n", Flags & 0x1e0000);
Printf("%d\n", Flags & 0x1e000);
Printf("%d\n", Flags & 0x1e00);
Printf("%d\n", Flags & 0x1e0);
Printf("%d\n", Flags & 1);
Printf("%d\n", Flags & 6);
Printf("%d\n", Flags & 0x18);


local uint Pos = unk >> 1 & 3;
local uint Rot = unk >> 3 & 3;
local uint Scale = unk >> 5 & 3;
local uint Opacity = unk >> 7 & 3;
local uint UV1 = unk >> 9 & 3;
local uint WH1 = unk >> 0xb & 3;
local uint UV2 = unk >> 0xd & 3;
local uint WH2 = unk >> 0xf & 3;
local uint BlendRate = unk >> 0x11 & 3;
local uint BlendRate2 = unk >> 0x13 & 3;
local uint GlareRate = unk >> 0x15 & 3;
local uint AlphaRef = unk >> 0x17 & 3;
local uint OutlineID = unk >> 0x19 & 3;

local uint NeededMemory = Pos * 0xc + OutlineID * 4 + (UV1 + Scale + WH1 + WH2 + BlendRate) * 8 +
          (Opacity + Rot + UV2 + BlendRate2 + GlareRate + AlphaRef) * 4;

Printf("Pos flag = %d\n", Pos);
Printf("Rot flag = %d\n", Rot);
Printf("Scale flag = %d\n", Scale);
Printf("Opacity flag = %d\n", Opacity);
Printf("UV1 flag = %d\n", UV1);
Printf("WH1 flag = %d\n", WH1);
Printf("UV2 flag = %d\n", UV2);
Printf("WH2 flag = %d\n", WH2);
Printf("BlendRate flag = %d\n", BlendRate);
Printf("BlendRate2 flag = %d\n", BlendRate2);
Printf("GlareRate flag = %d\n", GlareRate);
Printf("AlphaRef flag = %d\n", AlphaRef);
Printf("OutlineID flag = %d\n", OutlineID);

Printf("NeededMemory = %d Byte\n", NeededMemory);



/*
bytes = ::nuccEndianConvert(local_64);
*(uint *)(this + 0x18) =
     local_6c & 0x1e00000 |
     local_6c & 0x1e0000 |
     local_6c & 0x1e000 |
     local_6c & 0x1e00 |
     local_6c & 0x1e0 |
     *(uint *)(this + 0x18) & 0xf8000000 | local_6c & 1 | local_6c & 6 | local_6c & 0x18 |
     local_6c & 0x6000000;
uVar14 = (ushort)local_68;
local_64 = bytes;*/